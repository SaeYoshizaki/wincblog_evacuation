---
import Image from "astro/components/Image.astro";
import type { Article } from "../../../types";
import { fetchAllArticles } from "../article.astro";
import { users } from "../../../users";
import ArticleComponent from "../articleComponent.astro";
import Header from "../../../components/Header/header.astro";

export async function getStaticPaths() {
  return users.map((user) => ({
    params: { name: user.userName },
  }));
}

const { name } = Astro.params;

const props = users.filter((user) => user.userName === name)[0];

const allArticles: Article[] = ((await fetchAllArticles(props, import.meta.env.QIITA_TOKEN)).flat()).sort((a, b) => {
  return new Date(b.published_at).getTime() - new Date(a.published_at).getTime();
});
---

<style>
  a {
    text-decoration: none;
    color:inherit;
  }

  .content {
    background-color: rgb(23, 25, 35);
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0;
  }

  .container {
    width: 66.67%; 
    margin: 5% auto;
    color: white;
    display: block;
  }

  .links {
    align-items:center;
    margin:0 auto;
  }

  .profile-section {
    align-items: center;
    margin-bottom: 20px;
    margin: 0 auto;
    background-color: #3f3f46;
    padding: 20px;
    border-radius: 10px;
    width: 20%;
    text-align: center;
  }

  .profile-section img {
    border-radius: 5%;
    width: 100px;
    height: 100px;
    margin-right: 20px;
  }

  .profile-info {
    display: flex;
    flex-direction: column;
  }

  .profile-info h2 {
    margin: 0;
    font-size: 1.5rem;
  }

  .profile-info p {
    margin: 5px 0;
    color: #a1a1aa;
  }

  .articles-container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    margin: 20px 0;
  }

  .article-right {
    display: flex;
    justify-content: flex-end;
  }

  .article-left {
    display: flex;
    justify-content: flex-start;
  }

  h1 {
    text-align: center;
    color: white;
    margin: 15px 0;
    border-bottom: 2px solid white;
    font-size: 2rem;
  }

  @media (max-width: 1024px) {
    .articles-container {
      grid-template-columns: 1fr;
    }

    .user-card {
      width: 80%;
    }

    .profile-section {
      width: 40%;
    }
  }

  @media (max-width: 480px) {
    h1 {
      font-size: 1.5rem;
    }

    .load-more-btn {
      font-size: 0.9rem;
      padding: 8px;
    }

    .user-card img {
      width: 80px;
      height: 80px;
    }
  }
</style>

<html>
  <head>
    <meta charset="UTF-8">
  </head>
  <body style="display: block; padding: 0; margin: 0;">
    <Header/>
    <div class="content">
      <div class="container">
        <div class="profile-section">
          <Image
            src={props.userImgSrc}
            width={100}
            height={100}
            alt="User profile image"
          />
          <div class="profile-info">
            <h2>{props.userName}</h2>
            <p>{props.introduction}</p>
          </div>
          <div class="links">
            <a href="">
              <svg xmlns="http://www.w3.org/2000/svg" width="28" height="32" viewBox="0 0 448 512"><path fill="currentColor" d="M64 32C28.7 32 0 60.7 0 96v320c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64zm297.1 84L257.3 234.6L379.4 396h-95.6L209 298.1L123.3 396H75.8l111-126.9L69.7 116h98l67.7 89.5l78.2-89.5zm-37.8 251.6L153.4 142.9h-28.3l171.8 224.7h26.3z"/></svg>
            </a>
            <a href="">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 16 16"><path fill="currentColor" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59c.4.07.55-.17.55-.38c0-.19-.01-.82-.01-1.49c-2.01.37-2.53-.49-2.69-.94c-.09-.23-.48-.94-.82-1.13c-.28-.15-.68-.52-.01-.53c.63-.01 1.08.58 1.23.82c.72 1.21 1.87.87 2.33.66c.07-.52.28-.87.51-1.07c-1.78-.2-3.64-.89-3.64-3.95c0-.87.31-1.59.82-2.15c-.08-.2-.36-1.02.08-2.12c0 0 .67-.21 2.2.82c.64-.18 1.32-.27 2-.27s1.36.09 2 .27c1.53-1.04 2.2-.82 2.2-.82c.44 1.1.16 1.92.08 2.12c.51.56.82 1.27.82 2.15c0 3.07-1.87 3.75-3.65 3.95c.29.25.54.73.54 1.48c0 1.07-.01 1.93-.01 2.2c0 .21.15.46.55.38A8.01 8.01 0 0 0 16 8c0-4.42-3.58-8-8-8"/></svg>
            </a>
          </div>
        </div>
        
        
  
        <h1>Articles</h1>
  
        <div class="articles-container">
          {allArticles.map((article, index) => (
            index % 2 === 0 ? (
              <div class="article-right">
                <ArticleComponent {...article} />
              </div>
            ) : (
              <div class="article-left">
                <ArticleComponent {...article} />
              </div>
            )
          ))}
        </div>
      </div>
    </div>
    
  </body>
</html>
